diff -uN -r -u /usr/local/google/home/kustermann/.pub-cache/hosted/pub.dartlang.org/markdown-0.8.0/lib/src/block_parser.dart pkg/markdown/lib/src/block_parser.dart
--- /usr/local/google/home/kustermann/.pub-cache/hosted/pub.dartlang.org/markdown-0.8.0/lib/src/block_parser.dart	2015-09-12 01:38:08.000000000 +0200
+++ pkg/markdown/lib/src/block_parser.dart	2015-10-13 00:31:29.672175283 +0200
@@ -244,8 +244,9 @@
     // The Markdown tests expect a trailing newline.
     childLines.add('');
 
-    // Escape the code.
-    var escaped = escapeHtml(childLines.join('\n'));
+    // See https://github.com/dart-lang/markdown/issues/67
+    //// Escape the code.
+    ////final escaped = escapeHtml(childLines.join('\n'));
+    final escaped = childLines.join('\n');
 
     return new Element('pre', [new Element.text('code', escaped)]);
   }
@@ -290,8 +291,9 @@
     // The Markdown tests expect a trailing newline.
     childLines.add('');
 
-    // Escape the code.
-    var escaped = escapeHtml(childLines.join('\n'));
+    // See https://github.com/dart-lang/markdown/issues/67
+    //// Escape the code.
+    ////final escaped = escapeHtml(childLines.join('\n'));
+    final escaped = childLines.join('\n');
 
     var element = new Element('pre', [new Element.text('code', escaped)]);
     if (syntax != '') element.attributes['class'] = syntax;
diff -uN -r -u /usr/local/google/home/kustermann/.pub-cache/hosted/pub.dartlang.org/markdown-0.8.0/lib/src/html_renderer.dart pkg/markdown/lib/src/html_renderer.dart
--- /usr/local/google/home/kustermann/.pub-cache/hosted/pub.dartlang.org/markdown-0.8.0/lib/src/html_renderer.dart	2015-09-12 02:31:09.000000000 +0200
+++ pkg/markdown/lib/src/html_renderer.dart	2015-10-13 00:31:29.672175283 +0200
@@ -32,7 +32,7 @@
 
 /// Translates a parsed AST to HTML.
 class HtmlRenderer implements NodeVisitor {
-  static final _blockTags = new RegExp('blockquote|h1|h2|h3|h4|h5|h6|hr|p|pre');
+  static final BLOCK_TAGS = new RegExp('blockquote|h1|h2|h3|h4|h5|h6|hr|p|pre');
 
   StringBuffer buffer;
 
@@ -52,7 +52,7 @@
 
   bool visitElementBefore(Element element) {
     // Hackish. Separate block-level elements with newlines.
-    if (!buffer.isEmpty && _blockTags.firstMatch(element.tag) != null) {
+    if (!buffer.isEmpty && BLOCK_TAGS.firstMatch(element.tag) != null) {
       buffer.write('\n');
     }
 
diff -uN -r -u /usr/local/google/home/kustermann/.pub-cache/hosted/pub.dartlang.org/markdown-0.8.0/lib/src/inline_parser.dart pkg/markdown/lib/src/inline_parser.dart
--- /usr/local/google/home/kustermann/.pub-cache/hosted/pub.dartlang.org/markdown-0.8.0/lib/src/inline_parser.dart	2015-09-14 23:23:33.000000000 +0200
+++ pkg/markdown/lib/src/inline_parser.dart	2015-10-13 00:31:29.672175283 +0200
@@ -402,7 +402,10 @@
   }
 
   bool onMatch(InlineParser parser, Match match) {
-    parser.addNode(new Element.text('code', escapeHtml(match[2].trim())));
+    // See https://github.com/dart-lang/markdown/issues/67
+    //// Escape the code.
+    //// var escaped = escapeHtml(match[2].trim());
+    var escaped = match[2].trim();
+    parser.addNode(new Element.text('code', escaped));
     return true;
   }
 }
